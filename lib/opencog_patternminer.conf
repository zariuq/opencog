#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
SERVER_CYCLE_DURATION = 100

# Economic Attention Allocation parameters
STARTING_STI_FUNDS    = 100000
STARTING_LTI_FUNDS    = 100000
TARGET_STI_FUNDS      = 10000
TARGET_LTI_FUNDS      = 10000
STI_FUNDS_BUFFER      = 10000
LTI_FUNDS_BUFFER      = 10000
MIN_STI               = 0

ECAN_MAX_ATOM_STI_RENT      = 15

ECAN_STARTING_ATOM_STI_RENT = 10
ECAN_STARTING_ATOM_STI_WAGE = 10

ECAN_STARTING_ATOM_LTI_RENT = 1
ECAN_STARTING_ATOM_LTI_WAGE = 10

ECAN_AF_RENT_FREQUENCY = 2

#For FocusBoundaryUpdatingAgent
ECAN_AFB_SIZE = 0.2
ECAN_AFB_DECAY = 0.1
ECAN_AFB_BOTTOM = 50
ECAN_MIN_AF_SIZE = 100
ECAN_MAX_AF_SIZE = 500

#For ForgettingAgent
ECAN_ATOMSPACE_MAXSIZE = 100000
ECAN_ATOMSPACE_ACCEPTABLE_SIZE_SPREAD = 100

#For HebbianLinkCreationAgent
ECAN_MAXLINKS = 300
ECAN_LOCAL_FAR_LINK_RATIO = 10

#For WARent/DiffusionAgent
ECAN_DIFFUSION_TOURNAMENT_SIZE = 5
ECAN_RENT_TOURNAMENT_SIZE = 5

#Used by ImportanceDiffusionAgent class
#0 => flat rent, 1 => exp rent, 2 => log rent, 3 => linear rent
ECAN_RENT_TYPE              = 0
ECAN_RENT_AMNESTY           = 5
ECAN_RENT_EQUATION_PARAMETER_0 = 0.05
ECAN_RENT_EQUATION_PARAMETER_1 = 0.0

#End of ImportanceDiffusionAgent class

#Used by SimpleImportanceDiffusionAgent class
#Maximum percentage of STI that is spread from an atom
ECAN_MAX_SPREAD_PERCENTAGE = 0.2

# If false, will diffuse along hebbian links only. If true,
# will also diffuse to all non-hebbian incident atoms in the
# incoming and outgoing sets
ECAN_SPREAD_HEBBIAN_ONLY = false

# Maximum percentage that will be available for diffusion to hebbian links
HEBBIAN_MAX_ALLOCATION_PERCENTAGE = 0.5
ECAN_CONVERT_LINKS = false
ECAN_CONVERSION_THRESHOLD = 15

# spread deciding function type (HPERBOLIC = 0 and STEP = 1 )
SPREAD_DECIDER_TYPE = 1
#END of SimpleImportanceDiffusionAgent params

#ForgettingAgent params
ECAN_FORGET_PERCENTAGE = 0.001

#END of Economic Attention Allocation parameters

# Use this command PROMPT when telnet/terminal doesn't support ANSI
PROMPT                = "opencog> "
# Prompt with ANSI color codes
ANSI_PROMPT           = "[0;32mopencog[1;32m> [0m"
# Use this guile PROMPT when telnet/terminal doesn't support ANSI
SCM_PROMPT            = "guile> "
# Prompt with ANSI color codes
ANSI_SCM_PROMPT       = "[0;34mguile[1;34m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
ANSI_ENABLED	       = true

SCM_PRELOAD           = cogserver/scm/config.scm

# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
MODULES               = libbuiltinreqs.so,
                        libscheme-shell.so,
                        libpy-shell.so,
			

# Optional modules, not enabled by default
#                        libPersistZmqModule.so,
#                        libbenchmark.so,
#                        libatomspacepublishermodule.so
#                        libhebbiancreation.so
#                        libdimensionalembedding.so
#                        libviterbi.so


# IMPORTANT!
# Database login credentials. Change these to reflect your actual setup!
# For information on how to set up atomspace persistance, see the README
# file in opencog/persist/sql/README.
#
# STORAGE               = "opencog-atomspace"
# STORAGE_USERNAME      = "opencog_user"
# STORAGE_PASSWD        = "asdf"
#
# The sense-similarity tables hold precomputed values or the similarity
# of word WordNet-3.0 senses. These tables are referenced in
# nlp/wsd/SenseSimilaritySQL.cc  These will *eventually* be replaced by
# a persistent opencog table of sense similarities. For now, they remain
# in use.
#
SENSE_SIMILARITY_DB_NAME          = "lexat"
SENSE_SIMILARITY_DB_USERNAME      = "linas"
SENSE_SIMILARITY_DB_PASSWD        = "asdf"

# Parameters for ZeroMQ AtomSpace Event Publisher
ZMQ_EVENT_USE_PUBLIC_IP = TRUE
ZMQ_EVENT_PORT = 5563


# Parameters for RuleEngine
# RULE_ENGINE_TRIGGERED_ON = [1 ,2 ,3]
# 1-when atom added 2-when atom enters to AF 3-both on 1 and 2
RULE_ENGINE_TRIGGERED_ON = 1

# OpenPsi parameters
#PSI_FEELINGS = fear, anger, happiness, sadness
# Complete list of feelings
#PSI_FEELINGS = fear, pride, love, hate, anger, gratitude, happiness, excitement



# Parameters for Pattern Miner
Pattern_Max_Gram = 3
Pattern_mining_mode = "Depth_First" # options: "Breadth_First" , "Depth_First"
Enable_Frequent_Pattern = true
Enable_Interesting_Pattern = true

Max_thread_num = 1

Frequency_threshold = 2

# Only effective when Enable_Interesting_Pattern is true. The options are "Interaction_Information", "surprisingness"
Enable_Interaction_Information = false
Enable_surprisingness = true
Interestingness_Evaluation_method = "surprisingness"

# set the IP address of the central server for distributed pattern miner. Default is the local machine address.
PMCentralServerIP = "127.0.0.1"
PMCentralServerPort = "19009"
pattern_parse_thread_num = 6 # for the central server

# use_keyword_black_list and use_keyword_white_list can be both false, but only one can be true
use_keyword_black_list = false
use_keyword_white_list = false

keyword_white_list_logic = OR # can be OR, or AND 


keyword_black_list = #name,termPeriod,season,league,president,chairman,vicePresident,primeMinister,vicePrimeMinister,this, that,these,those,it,he, him, her, she
keyword_white_list = #president,President,chairman,Chairman,vicePresident,primeMinister,vicePrimeMinister,keyPerson,Minister,Premier, mayor

enable_filter_leaves_should_not_be_vars = true # This is suggested to set to false for NLP data
enable_filter_links_should_connect_by_vars = true
enable_filter_links_of_same_type_not_share_second_outgoing = true
same_link_types_not_share_second_outgoing = "InheritanceLink,ReferenceLink"
enable_filter_not_same_var_from_same_predicate = true
enable_filter_not_all_first_outgoing_const = false
# if enable_filter_first_outgoing_evallink_should_be_var is true, enable_filter_not_all_first_outgoing_const not need to be true
enable_filter_first_outgoing_evallink_should_be_var = true
enable_filter_node_types_should_not_be_vars = true
node_types_should_not_be_vars = "PredicateNode,LinkGrammarRelationshipNode" # if there are more than one type, use ',' as separator, no space among them
only_mine_patterns_start_from_white_list = false
only_mine_patterns_start_from_white_list_contain = false
